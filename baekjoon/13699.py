import sys

cached = [[0 for x in range(36)] for y in range(36)]
cached[0][0] = 1

t = [1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862, 16796, 58786, 208012, 742900, 2674440, 9694845, 35357670, 129644790, 477638700, 1767263190, 6564120420, 24466267020, 91482563640, 343059613650, 1289904147324, 4861946401452, 18367353072152, 69533550916004, 263747951750360, 1002242216651368, 3814986502092304, 14544636039226909, 55534064877048198, 212336130412243110, 812944042149730764, 3116285494907301262]

def solve(n):
    if t[n] != 0:
        return t[n]

    acc = 0
    for i in range(0, n):
        i1 = i
        i2 = n - i - 1

        if i2 > i1:
            i1, i2 = i2, i1
        
        if cached[i1][i2] == 0:
            cached[i1][i2] = solve(i1) * solve(i2)

        acc += cached[i1][i2]

    t[n] = acc

    return acc

n = int(sys.stdin.readline())

print(solve(n))

